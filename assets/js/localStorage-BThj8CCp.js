import{a as t}from"./preload-helper-xKIU3iAw.js";const e={version:"2.17.0",environment:"production",apiUrl:"https://api.momentumdash.com/",platform:"chrome"};async function s({method:t,url:e,data:s,headers:n}){const o=await fetch(e,{method:t,headers:n,body:"Object"===(null==s?void 0:s.constructor.name)?JSON.stringify(s):s}).catch((()=>({statusText:"No response from the server"}))),{status:r,headers:a,statusText:i}=o,c={status:r,headers:(null==a?void 0:a.entries)&&Object.fromEntries(a)||{},statusText:i};if(o.ok){const t=await o.text();return t&&(c.data=JSON.parse(t)),c}{let n="%c Request Error: "+(r||"");return i&&(n+=(r?" : ":"")+i),console.groupCollapsed(n,"color: #ff0505"),console.log("Request:",{method:t,url:e,data:s}),console.log("Response:",o),console.groupEnd(),c}}function n(t){return t>=200&&t<300}const o="store",r="_key",a="_value";function i(t){return"object"==typeof t&&null!==t&&r in t&&a in t}class c{constructor(t,e){this.name="keyValueDb:"+t,this.version=10*e,this.database=null}get db(){return this.database?Promise.resolve(this.database):this.open().then((t=>this.database=t))}open(){return new Promise(((t,e)=>{const s=indexedDB.open(this.name,this.version);s.onerror=()=>e(s.error),s.onupgradeneeded=()=>{s.result.createObjectStore(o,{keyPath:r})},s.onsuccess=()=>{const e=s.result;e.onversionchange=()=>{e.close(),this.database=null},t(e)}}))}async bulkPatch(t){const e={};for(const s in t){const n=t[s];n&&(e[s]=await this.patch(s,n))}return e}async patch(t,e){const s=await this.get(t);if("object"!=typeof s)throw new Error(`KeyValueDb:${this.name} Error: patch called on ${typeof s} value. Patch may only be called on objects or empty rows. Key: ${t}, Existing Value: ${String(s)}`);const n=Object.assign({},s||{},e),o={[r]:t,[a]:n};return await this.transaction("readwrite",(t=>t.put(o))),{newValue:n,previousValue:s}}set(t,e){const s={[r]:t,[a]:e};return this.transaction("readwrite",(t=>t.put(s)))}delete(t){return this.transaction("readwrite",(e=>e.delete(t)))}async get(t){const e=await this.transaction("readonly",(e=>e.get(t)));return e&&i(e)?e[a]:null}async transaction(t,e,s={retries:3}){let n=0;return new Promise(((a,c)=>{const l=async()=>{try{const s=(await this.db).transaction([o],t);s.onerror=()=>c(n.error);const n=e(s.objectStore(o));n.onsuccess=()=>{const t=n.result;if(!function(t){return void 0===t||"string"==typeof t||i(t)}(t))throw new Error(`Transaction result does not match schema (does not contain a property matching ${r})`);a(t)}}catch(u){if(++n>s.retries)return void c(u);(await this.db).close(),this.database=null,l()}};l()}))}}const l=new c("misc",1);class u{constructor(t){this.endpoint=t,this.config=null,this.pendingRequest=null}async getConfig(){return this.config||(this.pendingRequest?await this.pendingRequest:(this.pendingRequest=this.fetchWithLocalFallback(),this.config=await this.pendingRequest,this.config&&await l.set(this.endpoint,this.config))),this.config}fetchWithLocalFallback(){return s({method:"GET",data:void 0,url:"https://api.momentumdash.com/"+this.endpoint,headers:{"X-Momentum-Version":e.version}}).then((({data:t})=>{if(!t)throw"Request for config from API failed";return t})).catch((t=>(console.error(t),l.get(this.endpoint).then((t=>t||{})))))}}let h=new u("config");async function d(e){return e?t(await h.getConfig(),e):await h.getConfig()}const g="extension",p=new URL(`https://browser-http-intake.logs.datadoghq.com/v1/input/pub18ef9128dd80db1a80dfc3f9180b55b5?ddsource=browser&ddtags=${encodeURIComponent(`env:${e.environment},service:${g},version:${e.version}`)}`).toString();class m{constructor(t,e=1e-5){this.name=t,this.defaultSampleRate=e,this.sampleRate=null}warn(t,e){return this._log(t,e,"warn")}error(t,e){return this._log(t,e,"error")}info(t,e){return this._log(t,e,"info")}async _log(...t){if(!(await this._isEligibleForSubmission()))return;const[e,n,o]=this._parseArgs(t),r={status:o,date:Date.now(),service:g,message:e,_logger:this.name,...n};this.tabId&&(r.tabId=this.tabId),await s({method:"POST",url:p,data:r})}_convertUndefinedPropertiesToStrings(t){const e={};for(const[s,n]of Object.entries(t))e[s]=void 0===n?"<undefined>":n;return e}_parseArgs(t){let[e,s,n]=t;if(s||"object"!=typeof e||(s=e,e=s.message),s instanceof ErrorEvent&&(s=s.error),s instanceof Error){const{name:t,stack:e}=s;s={name:t,errorMessage:s.message,stack:e}}else"string"==typeof s?(e=`${e}: ${s}`,s={}):"string"==typeof e&&(null==s?void 0:s.message)&&(s.message=`${e}: ${s.message}`);return s&&(s=this._convertUndefinedPropertiesToStrings(s)),[e,s,n]}async _isEligibleForSubmission(){return null===this.sampleRate&&(this.sampleRate=await this._getSampleRate()),Math.random()<=this.sampleRate}async _getSampleRate(){const{datadogLoggingSamplingRate:t}=await d();return t?this.name.split(".").reduce(((e,s,n,o)=>{const r=o.slice(0,n+1).join(".");return r in t?t[r]:e}),this.defaultSampleRate):this.defaultSampleRate}}Storage.prototype.setObject=function(t,e){this.setItem(t,JSON.stringify(e))},Storage.prototype.getObject=function(t){const e=this.getItem(t);return e?JSON.parse(e):void 0};export{c as K,m as L,u as O,e,d as g,n as i,l as m,s as r};